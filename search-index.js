var searchIndex = JSON.parse('{\
"npath":{"doc":"Normalized Paths","i":[[8,"NormPathBufExt","npath","Extension trait for [<code>PathBuf</code>].",null,null],[10,"lexical_push","","Appends <code>path</code> to <code>self</code>.",0,[[["path",3],["asref",8]]]],[8,"NormPathExt","","Extension trait for [<code>Path</code>].",null,null],[10,"absolute","","Returns the absolute path.",1,[[],[["pathbuf",3],["result",6]]]],[10,"base","","Returns the last path component.",1,[[],["path",3]]],[10,"dir","","Returns the path up to, but not including, the final …",1,[[],["path",3]]],[10,"is_inside","","Returns whether <code>self</code> is lexically inside of <code>base</code>.",1,[[["path",3],["asref",8]]]],[10,"normalized","","Returns the normalized equivalent of <code>self</code>.",1,[[],["pathbuf",3]]],[10,"lexical_join","","Returns <code>path</code> appended to <code>self</code>.",1,[[["path",3],["asref",8]],["pathbuf",3]]],[10,"relative_to","","Returns the relative path from <code>base</code> to <code>self</code>.",1,[[["path",3],["asref",8]],[["pathbuf",3],["option",4]]]],[10,"try_relative_to","","Returns the relative path from <code>base</code> to <code>self</code>.",1,[[["path",3],["asref",8]],[["pathbuf",3],["result",6]]]],[10,"resolved","","Returns the normalized equivalent of <code>self</code> with …",1,[[],[["pathbuf",3],["result",6]]]],[10,"rooted_join","","Returns <code>path</code> restricted to <code>self</code>.",1,[[["path",3],["asref",8]],["pathbuf",3]]],[10,"rooted_join2","","Returns <code>path</code> restricted to <code>self</code>.",1,[[["path",3],["asref",8]],["pathbuf",3]]],[10,"try_rooted_join","","Returns <code>path</code> restricted to <code>self</code>.",1,[[["path",3],["asref",8]],[["pathbuf",3],["result",6]]]]],"p":[[8,"NormPathBufExt"],[8,"NormPathExt"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);